/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movieannot.Process;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 *
 * @author dieutq
 */
public class NewJFrame extends javax.swing.JFrame {

    private JPanel jPanel3;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        List<String> Character = new ArrayList<String>();
        int[][] rlRelation = new int[20][20];

        for (int i = 0; i < rlRelation.length; i++) {
            for (int j = 0; j < rlRelation.length; j++) {
                rlRelation[i][j] = 0;
            }
        }

        DefaultListModel mod = new DefaultListModel();
        mod.addElement("0#Jar Jar");
        mod.addElement("1#Luke");
        mod.addElement("2#Obi");
        mod.addElement("3#Leia");
        mod.addElement("4#Organa");
        mod.addElement("5#Papaltine");
        mod.addElement("6#Dath Vader");
        mod.addElement("7#Yoda");
        mod.addElement("8#Han Solo");
        mod.addElement("9#Caption");
        mod.addElement("a#Mindu");

        rlRelation[0][1] = 10;
        rlRelation[1][0] = 10;      
        rlRelation[0][1] = 10;
        rlRelation[1][0] = 10;
        rlRelation[0][2] = 3;
        rlRelation[2][0] = 3;
        rlRelation[0][3] = 4;
        rlRelation[3][0] = 4;
        rlRelation[0][4] = 12;
        rlRelation[4][0] = 12;
        rlRelation[0][5] = 6;
        rlRelation[5][0] = 6;
        rlRelation[0][6] = 8;
        rlRelation[6][0] = 8;
        rlRelation[0][7] = 5;
        rlRelation[7][0] = 5;
        rlRelation[0][8] = 10;
        rlRelation[8][0] = 10;
        rlRelation[0][9] = 11;
        rlRelation[9][0] = 11;
        rlRelation[0][10] = 7;
        rlRelation[10][0] = 7;
        
        rlRelation[2][1] = 9;
        rlRelation[1][2] = 9;      
        rlRelation[2][3] = 9;
        rlRelation[3][2] = 9;              
        rlRelation[2][4] = 9;
        rlRelation[4][2] = 9;      
        

        int max = rlRelation[0][0];

        for (int i = 0; i < rlRelation.length; i++) {
            for (int j = 0; j < rlRelation.length; j++) {
                if (rlRelation[i][j] > max) {
                    max = rlRelation[i][j];
                }
            }
        }

        float[][] rlRl = new float[20][20];
        for (int i = 0; i < rlRelation.length; i++) {
            for (int j = 0; j < rlRelation.length; j++) {
                rlRl[i][j] = (float) rlRelation[i][j] / max;
                System.out.print("  " + rlRl[i][j]);
            }
            System.out.println();
        }
        List<String> arc1 = new ArrayList<>();

        List<String> lstCharacter = new ArrayList<String>();
        if (mod.getSize() < 10) {
            for (int i = 0; i < mod.getSize(); i++) {
                arc1 = Arrays.asList(mod.get(i).toString().split("#"));
                lstCharacter.add(arc1.get(1));
            }
        }
        if (mod.getSize() >= 10) {
            for (int i = 1; i <= 9; i++) {
                arc1 = Arrays.asList(mod.get(i).toString().split("#"));
                lstCharacter.add(arc1.get(1));
            }
            arc1 = Arrays.asList(mod.get(0).toString().split("#"));
            lstCharacter.add(arc1.get(1));            
            for (int i = 10; i < mod.getSize(); i++) {
                arc1 = Arrays.asList(mod.get(i).toString().split("#"));
                lstCharacter.add(arc1.get(1));
            }
        }

        for (int i = 0; i < lstCharacter.size(); i++) {
            System.out.println(lstCharacter.get(i).toString());
        }

        CreateGraphGP(Pn, lstCharacter, rlRl);
    }

    public void CreateGraphGP(JPanel Panel, List<String> lstCharacter, float[][] rlRelationship) {
        GraphBuilder bd = new GraphBuilder();
        Panel.setSize(500, 500);
        bd.script(Panel, lstCharacter, rlRelationship);
        Panel.repaint();
        Panel.revalidate();
        //jPanel3.setSize(500, 500);        
        //jPanel3.add(bd);
        //jPanel3.validate();
        //jPanel3.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pn = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout PnLayout = new javax.swing.GroupLayout(Pn);
        Pn.setLayout(PnLayout);
        PnLayout.setHorizontalGroup(
            PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1083, Short.MAX_VALUE)
        );
        PnLayout.setVerticalGroup(
            PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(Pn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Pn;
    // End of variables declaration//GEN-END:variables
}
